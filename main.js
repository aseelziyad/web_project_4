!function(){"use strict";class e{constructor(e){this._popup=document.querySelector(e),this._handleEscapeClose=this._handleEscapeClose.bind(this),this._handleBackgroundClose=this._handleBackgroundClose.bind(this),this._handleCloseOnCloseButtonClick=this._handleCloseOnCloseButtonClick.bind(this),this.closeButton=document.querySelectorAll(".popup__close")}open(){this._popup.classList.add("popup_active"),this._setDocumentEventListeners()}close(){this._popup.classList.remove("popup_active"),this._removeDocumentEventListeners()}_handleEscapeClose(e){"Escape"===e.key&&this.close()}_handleBackgroundClose(e){e.target.classList.contains("popup_active")&&this.close()}_handleCloseOnCloseButtonClick(e){e.target.classList.contains("popup__close")&&this.close()}_setDocumentEventListeners(){document.addEventListener("keydown",this._handleEscapeClose),document.addEventListener("mousedown",this._handleBackgroundClose)}_removeDocumentEventListeners(){document.removeEventListener("keydown",this._handleEscapeClose),document.removeEventListener("mousedown",this._handleBackgroundClose)}setEventListeners(){this._popup.addEventListener("click",this._handleCloseOnCloseButtonClick)}}class t extends e{constructor(e,t,s,n,r){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._inputList=this._popup.querySelectorAll(".popup__input"),this._button=this._form.querySelector(".popup__submit-btn"),this._buttonText=n,this._validator=s}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}showLoading(){this._button.textContent="Saving..."}hideLoading(){this._button.textContent="Save"}open(){this._validator.resetValidation(),super.open()}close(){super.close(),this._form.reset()}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}}class s{constructor(e,t,s){let{data:n,handleCardClick:r,handleDeleteCard:o,handleLikeIcon:i}=e;var a,l;l=e=>{this._likes=e,this._renderLikes()},(a="updateLike")in this?Object.defineProperty(this,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):this[a]=l,this._cardSelector=t,this._name=n.name,this._link=n.link,this._id=n._id,this._likes=n.likes,this._userId=s,this._ownerId=n.owner._id,this._handleImagePopupOpen=r,this._handleDeleteCard=o,this._handleLikeIcon=i,this._element=this._getCardTemplate(),this._element.querySelector(".photograph__title").textContent=this._name,this._cardImage=this._element.querySelector(".photograph__post"),this._deleteCardButton=this._element.querySelector(".photograph__delete-button"),this._likeCardButton=this._element.querySelector(".photograph__like-button"),this._likeCounter=this._element.querySelector(".photograph__like-counter"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setDeleteButton(),this._renderLikes(),this._setEventListeners()}_getCardTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".photograph").cloneNode(!0)}getCard(){return this._element}_setDeleteButton(){this._ownerId!==this._userId&&(this._deleteCardButton.style.display="none")}deleteCard(e){this._element.remove(),this._element=null}checkLikes(){return this._likes.some((e=>e._id==this._userId))}_renderLikes(){this._likeCounter.textContent=this._likes.length,this.checkLikes()?this._likeCardButton.classList.add("photograph__like-button_active"):this._likeCardButton.classList.remove("photograph__like-button_active")}_setEventListeners(){this._deleteCardButton.addEventListener("click",(()=>{this._handleDeleteCard(this._id)})),this._likeCardButton.addEventListener("click",(()=>{this._handleLikeIcon(this._id)})),this._element.querySelector(".photograph__post").addEventListener("click",this._handleImagePopupOpen)}}class n{constructor(e,t){this.formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this.formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this.formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputElements=[...this.formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this.formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this.formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}}document.querySelector(".popup_edit-profile"),document.querySelector(".popup_avatar");const r=document.querySelector("#input-name"),o=document.querySelector("#input-about"),i=document.querySelector("#form-edit"),a=document.querySelector("#form-avatar"),l=document.querySelector(".profile__edit-button"),h=document.querySelector(".profile__avatar-button"),c=document.querySelector(".profile__add-button"),u=(document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),document.querySelector("#card-template").content,document.querySelector(".photographs"),document.querySelector(".popup_add-card")),d=(u.querySelector("#input-title"),u.querySelector("#input-image-link"),u.querySelector("#form-add")),_={inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visiable"},p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_getResponseData(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._getResponseData)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._getResponseData)}setUserInfo(e){let{name:t,about:s,avatar:n}=e;return fetch("".concat(this._baseUrl,"/users/me "),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s,avatar:n})}).then(this._getResponseData)}createCard(e){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then(this._getResponseData)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"}).then(this._getResponseData)}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"}).then(this_getResponseData)}disLikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"}).then(this._getResponseData)}setUserAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this._getResponseData)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"6edae45a-96e2-41b1-a788-2616fd5c518a","Content-Type":"application/json"}});let m;Promise.all([p.getInitialCards(),p.getUserInfo()]).then((e=>{let[t,s]=e;m=s._id,b.renderer(t),S.setUserInfo({name:s.name,about:s.about}),S.setUserAvatar(s.avatar)})).catch((e=>{console.log(e)}));const v=new class extends e{constructor(e){super(e),this._popupImageCard=this._popup.querySelector(".popup__image-card"),this._popupImageTitle=this._popup.querySelector(".popup__image-title")}openImage(e,t){this._popupImageTitle.textContent=e,this._popupImageCard.src=t,this._popupImageCard.alt=e,super.open()}}(".popup_image");v.setEventListeners();const g=new class extends e{constructor(e){super(e),this._form=this._popup.querySelector(".popup__form")}setAction(e){this._handleSubmit=e}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}}(".popup_delete");function C(e){let{data:t}=e;const n=new s({data:t,handleCardClick:()=>{v.openImage(t.name,t.link)},handleLikeIcon:e=>{n.checkLikes()?p.disLikeCard(e).then((e=>{n.updateLike(e.likes)})).catch((e=>{console.log(e)})):p.likeCard(e).then((e=>{n.updateLike(e.likes)})).catch((e=>{console.log(e)}))},handleDeleteCard:e=>{g.open(),g.setAction((()=>{p.deleteCard(e).then((e=>{n.deleteCard(),g.close()})).catch((e=>{console.log(e)}))}))}},"#card-template",m);return n.getCard()}g.setEventListeners();const b=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderer(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{b.addItem(C({data:e}))}},".photographs"),E=new n(_,i);E.enableValidation();const S=new class{constructor(e){let{userNameSelector:t,userInfoSelector:s,userAvatarSelector:n}=e;this._name=document.querySelector(t),this._about=document.querySelector(s),this._avatar=document.querySelector(n)}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){this._avatar.src=e}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}}({userNameSelector:".profile__title",userInfoSelector:".profile__subtitle",userAvatarSelector:".profile__avatar"}),k=new t(".popup_edit-profile",(function(){k.showLoading(),p.setUserInfo(k._getInputValues()).then((e=>{S.setUserInfo(e),k.close()})).catch((e=>{console.log(e)})).finally((()=>{k.hideLoading()}))}),E);k.setEventListeners();const L=new n(_,a);L.enableValidation();const f=new t(".popup_avatar",(function(){const e=f._getInputValues();p.setUserAvatar(e.avatar).then((t=>{S.setUserAvatar(e.avatar),f.close()})).catch((e=>{console.log(e)})).finally((()=>{f.hideLoading()}))}),L);f.setEventListeners();const y=new n(_,d);y.enableValidation();const I=new t(".popup_add-card",(function(e){let{name:t,link:s}=e;const n={name:t,link:s};p.createCard(n).then((e=>{b.addItem(C({data:e})),I.close()})).catch((e=>{console.log(e)})).finally((()=>{I.hideLoading()}))}),y);I.setEventListeners(),l.addEventListener("click",(function(){const{name:e,about:t}=S.getUserInfo();r.value=e,o.value=t,k.open()})),c.addEventListener("click",(function(){I.open()})),h.addEventListener("click",(function(){f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,